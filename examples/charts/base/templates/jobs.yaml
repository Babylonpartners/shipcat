{{- range $v := $.Values.jobs }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $v.name }}
  labels:
    app: {{ $.Values.name }}
    type: {{ $.Values.type | default "job" }}
{{- if .Values.labels }}
{{ toYaml $.Values.labels | indent 4 }}
{{- end }}
{{- template "chart.shipcatRefs" $ }}
spec:
  template:
{{- if $v.podAnnotations }}
    metadata:
      annotations:
{{ toYaml $v.podAnnotations | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ $.Values.name }}
      #imagePullSecrets:
      containers:
      - name: {{ $.Values.name }}
        image: "{{ $.Values.image }}:{{ $.Values.version }}"
        imagePullPolicy: IfNotPresent
        env:
{{- range $k, $v := (merge $.Values.env.plain $.Values.secrets) }}
      - name: {{ $k }}
        value: "{{ $v }}"
{{- end }}
        volumeMounts:
{{- if $.Values.configs }}
  {{- $cfg := $.Values.configs }}
  {{- range $cfg.files }}
        - name: {{ $cfg.name }}-volume
          mountPath: {{ $cfg.mount }}{{ .dest }}
          subPath: {{ .dest }}
  {{- end }}
{{- end }}
{{- if $.Values.volumeMounts }}
{{ toYaml $.Values.volumeMounts | indent 8 }}
{{- end }}

        args:
{{ toYaml $v.command | indent 8 }}
      volumes:
      {{- if $.Values.configs }}
      # special case configmap first
      - name: {{ $.Values.configs.name }}-volume
        configMap:
          name: {{ $.Values.configs.name }}
        {{- end }}
      #  other volumes
      {{- range $v := $.Values.volumes }}
{{ toYaml (list $v) | indent 6 }}
          {{- end }}

      restartPolicy: {{ $v.restartPolicy | quote }}
{{- end }}
