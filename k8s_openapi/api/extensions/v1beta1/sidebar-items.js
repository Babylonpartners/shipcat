initSidebarItems({"struct":[["AllowedCSIDriver","AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used."],["AllowedFlexVolume","AllowedFlexVolume represents a single Flexvolume that is allowed to be used. Deprecated: use AllowedFlexVolume from policy API Group instead."],["AllowedHostPath","AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined. Deprecated: use AllowedHostPath from policy API Group instead."],["DaemonSet","DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."],["DaemonSetCondition","DaemonSetCondition describes the state of a DaemonSet at a certain point."],["DaemonSetSpec","DaemonSetSpec is the specification of a daemon set."],["DaemonSetStatus","DaemonSetStatus represents the current status of a daemon set."],["DaemonSetUpdateStrategy",""],["Deployment","DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."],["DeploymentCondition","DeploymentCondition describes the state of a deployment at a certain point."],["DeploymentRollback","DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."],["DeploymentSpec","DeploymentSpec is the specification of the desired behavior of the Deployment."],["DeploymentStatus","DeploymentStatus is the most recently observed status of the Deployment."],["DeploymentStrategy","DeploymentStrategy describes how to replace existing pods with new ones."],["FSGroupStrategyOptions","FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead."],["HTTPIngressPath","HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend."],["HTTPIngressRuleValue","HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'."],["HostPortRange","HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined. Deprecated: use HostPortRange from policy API Group instead."],["IDRange","IDRange provides a min/max of an allowed range of IDs. Deprecated: use IDRange from policy API Group instead."],["IPBlock","DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."],["Ingress","Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information."],["IngressBackend","IngressBackend describes all endpoints for a given service and port."],["IngressRule","IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue."],["IngressSpec","IngressSpec describes the Ingress the user wishes to exist."],["IngressStatus","IngressStatus describe the current state of the Ingress."],["IngressTLS","IngressTLS describes the transport layer security associated with an Ingress."],["NetworkPolicy","DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is allowed for a set of Pods"],["NetworkPolicyEgressRule","DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"],["NetworkPolicyIngressRule","DEPRECATED 1.9 - This group version of NetworkPolicyIngressRule is deprecated by networking/v1/NetworkPolicyIngressRule. This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from."],["NetworkPolicyPeer","DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by networking/v1/NetworkPolicyPeer."],["NetworkPolicyPort","DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by networking/v1/NetworkPolicyPort."],["NetworkPolicySpec","DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec."],["PodSecurityPolicy","PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API Group instead."],["PodSecurityPolicySpec","PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead."],["ReplicaSet","DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."],["ReplicaSetCondition","ReplicaSetCondition describes the state of a replica set at a certain point."],["ReplicaSetSpec","ReplicaSetSpec is the specification of a ReplicaSet."],["ReplicaSetStatus","ReplicaSetStatus represents the current status of a ReplicaSet."],["RollbackConfig","DEPRECATED."],["RollingUpdateDaemonSet","Spec to control the desired behavior of daemon set rolling update."],["RollingUpdateDeployment","Spec to control the desired behavior of rolling update."],["RunAsGroupStrategyOptions","RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsGroupStrategyOptions from policy API Group instead."],["RunAsUserStrategyOptions","RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead."],["SELinuxStrategyOptions","SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead."],["Scale","represents a scaling request for a resource."],["ScaleSpec","describes the attributes of a scale subresource"],["ScaleStatus","represents the current status of a scale subresource."],["SupplementalGroupsStrategyOptions","SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead."]]});