<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta http-equiv="x-ua-compatible" content="ie=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

  <title>ratfcat</title>

  <link rel="stylesheet" href="/raftcat/static/normalize.css" />
  <link rel="stylesheet" href="/raftcat/static/raftcat.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.4/css/bulma.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/horsey/4.2.2/horsey.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/horsey/4.2.2/horsey.js"></script>
  <style>
  input {
    padding: 40px;
    font-size: 200%;
  }
  li {
    width: 489px;
    font-size: 150%;
  }
  </style>
</head>
<body>
  <header class="header">
    <div class="wrapper">
      <h3 class="service-title"><span class="highlight">raft</span>cat
        {% if regions %}
        <span class="field has-addons" style="float:right">
          <span class="select">
            <select id="filterbyregion">
              <option value="">Switch region</option>
            </select>
          </span>
        </span>
        {% endif %}
      </h3>
    </div>
  </header>

  <main class="main">
    <div class="wrapper">
      <form class="form" id="searchform">

        <!-- FILTER by team name -->
        <label class="label">Filter by team</label>
        <div class="field has-addons">
          <div class="select">
            <select id="filterbyteam"></select>
          </div>
        </div>

        <!-- SEARCH by service name -->
        <label class="label is-large">Search</label>
        <div class="field has-addons">
          <div class="control is-expanded">
            <input class="input is-large" type="text" name="name" id="searcher" autocomplete="off">
          </div>
          <div class="control">
            <button class="button is-info is-large" type="submit">
              Go
            </button>
          </div>
        </div>
      </form>
    </div>
  </main>

  <footer class="footer-custom">
    <div class="wrapper">
      <a target="_blank" href="https://github.com/babylonhealth/shipcat/tree/master/raftcat">raftcat {{ raftcat }}</a>
    </div>
  </footer>
<script type="text/javascript">
const manifests = {{ manifests }};
const ALL_TEAMS_FILTER = 'All teams';
let horseyInstance;

const setSearch = d => {
  const checked = d.map(mf => ({ "value": mf.name }));
  const searcherEl = document.querySelector('#searcher');
  if (horseyInstance) horseyInstance.destroy();
  horseyInstance = horsey(searcherEl, {
    blankSearch: true,
    source: [{ list: checked }],
    getText: 'value',
    getValue: 'value',
    renderItem: function (li, suggestion) {
      li.innerHTML = suggestion.value;
    },
    highlighter: true
  });
}

const initTeamFilter = d => {
  const teamSelectEl = document.querySelector('#filterbyteam');
  const uniqueTeams = d.reduce((acc, { team  }) => {
    if (acc[team]) return acc;
    return Object.assign(acc, { [team]: team })
  }, {})
  const uniqueTeamsArr = Object.keys(uniqueTeams).sort();
  [ALL_TEAMS_FILTER, ...uniqueTeamsArr].forEach(team => {
    const optEl = document.createElement('option');
    optEl.value = team;
    optEl.innerHTML = team;
    teamSelectEl.appendChild(optEl);
  })
  teamSelectEl.addEventListener('change', e => {
    const { value } = e.target;
    if (value === ALL_TEAMS_FILTER) setSearch(manifests);
    else setSearch(manifests.filter(({ team }) => team === value))
  })
}

[setSearch, initTeamFilter].map(f => f(manifests))

const formEl = document.querySelector('#searchform');
formEl.addEventListener('submit', function (e) {
  e.preventDefault();
  if (!searcher.value) return;
  window.location = "/raftcat/services/" + searcher.value;
});

{% if regions %}
const regions = {{ regions }};
const initRegionFilter = r => {
  const regionSelectEl = document.querySelector('#filterbyregion');
  r.forEach(region => {
    const optEl = document.createElement('option');
    optEl.value = region.url;
    optEl.innerHTML = region.name;
    regionSelectEl.appendChild(optEl);
  })
  regionSelectEl.addEventListener('change', e => {
    const { value } = e.target;
    window.location.href = value;
  })
}
initRegionFilter(regions);
{% endif %}

</script>
</body>
</html>
