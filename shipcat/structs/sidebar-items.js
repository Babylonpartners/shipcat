initSidebarItems({"enum":[["Authentication",""],["DependencyProtocol","Supported dependency protocols"],["ErrorKind","The kind of an error."],["NotificationMode","Modes for slack upgrade notifications in this region"]],"fn":[["parse_memory","Parse normal k8s memory/disk resource value into floats"]],"mod":[["authorization",""],["autoscaling","Kubernetes horizontal pod autoscaler"],["container",""],["cronjob","Cron Jobs"],["gate","Gate configs"],["kafka","Kafka configs"],["kafkaresources",""],["kong","Kong configs"],["kongfig","Kongfig configs"],["metadata",""],["newrelic",""],["port",""],["prometheusalert",""],["rbac","Rbac"],["resources","Kubernetes resource structs"],["rollingupdate","Kubernetes rolling-update settings"],["security","Security related structs"],["sentry",""],["tolerations","Kuberneter tolerations"],["volume","Kubernetes volumes"]],"struct":[["Api","Kongfig structs https://github.com/mybuilder/kongfig"],["Authorization","Configuration for authorization of requests"],["BabylonAuthHeader","Babylon Auth Header plugin data"],["Certificate",""],["ConfigMap","ConfigMap"],["ConfigMappedFile","ConfigMapped File"],["Consumer",""],["Contact","Legacy contact data"],["Container",""],["Cors","Cors plugin data"],["CronJob",""],["Dependency","Dependency of a service"],["DestinationRule","DestinationRule"],["EnvVars","Environment variables to inject"],["EventStream",""],["Gate","Gate service configuration"],["HealthCheck","HealthCheck"],["HostAlias",""],["JobVolumeClaim",""],["Kafka",""],["KafkaResources",""],["Kong","Kong setup for a service"],["LifeCycle","A straight port of Kubernetes Container Lifecycle Events"],["LifeCycleHandler",""],["Manifest","Main manifest, serializable from manifest.yml or the shipcat CRD."],["Metadata","Metadata for a service"],["PersistentVolume","A kubernetes Persistent Volume Claim"],["Plugin","Not used yet"],["Port","Port to open on a container"],["Probe","Liveness or readiness Probe"],["PrometheusAlert","Data describing one Prometheus alert."],["Rbac","RBAC (Role-Based Access Control) PolicyRule"],["Region","A region is an abstract kube context"],["ResourceRequirements","Kubernetes resources"],["RollingUpdate","Configuration parameters for Deployment.spec.strategy.rollingUpdate"],["SecurityContext","Security context for ownership of volumes"],["SlackChannel","Slack channel verifier"],["Upstream",""],["VaultOpts",""],["Volume",""],["VolumeMount",""],["Worker","Worker for a service"]],"trait":[["ResultExt","Additional methods for `Result`, for easy interaction with this crate."]],"type":[["Result","Convenient wrapper around `std::Result`."]]});