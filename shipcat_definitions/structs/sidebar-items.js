initSidebarItems({"enum":[["DependencyProtocol","Supported dependency protocols"],["NotificationMode","Modes for slack upgrade notifications in this region"]],"mod":[["authorization",""],["autoscaling","Kubernetes horizontal pod autoscaler"],["container",""],["cronjob","Cron Jobs"],["gate","Gate configs"],["kafka","Kafka configs"],["kafkaresources",""],["kong","Kong configs"],["kongfig","Kongfig configs"],["metadata",""],["newrelic",""],["port",""],["prometheusalert",""],["rbac","Rbac"],["resources","Kubernetes resource structs"],["rollingupdate","Kubernetes rolling-update settings"],["security","Security related structs"],["sentry",""],["tolerations","Kuberneter tolerations"],["volume","Kubernetes volumes"]],"struct":[["ConfigMap","ConfigMap"],["ConfigMappedFile","ConfigMapped File"],["Dependency","Dependency of a service"],["DestinationRule","DestinationRule"],["EnvVars","Environment variables to inject"],["EventStream",""],["HealthCheck","HealthCheck"],["HostAlias",""],["LifeCycle","A straight port of Kubernetes Container Lifecycle Events"],["LifeCycleHandler",""],["PersistentVolume","A kubernetes Persistent Volume Claim"],["Probe","Liveness or readiness Probe"],["SecurityContext","Security context for ownership of volumes"],["VaultOpts",""],["Worker","Worker for a service"]]});